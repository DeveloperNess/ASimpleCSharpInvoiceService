using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using RestfulInvoiceService.Adapters;
using RestfulInvoiceService.Controllers;
using RestfulInvoiceService.Models;
using Rhino.Mocks;

namespace RestfulInvoiceService.Tests.Controllers
{
    [TestClass]
    public class InvoiceControllerTest
    {

        /************************************************

            Invoice stories:

            1) Create single invoice
                Invoices have:
                    a unique Id generated by the server (client cannot specify it)
                    an Invoice Number generated by the user (text of up to 50 characters)
                    a total price of the invoice (sum of line item prices)
                    one or more line items, each line item has:
                        a description (text of up to 256 characters)
                        a per item price
                        a count of items
                        a total price for the line (number of items multiplied by the price per item)

            2) Retrieve a single invoice by Id
                    If successful the returned data must be in the same format as the create but with the Id
                    If invoice cannot be found it must return an appropriate error

            3) Retrieve by invoice number
                    If successful the returned data must be in the same format as the create but with the Id
                    If invoice cannot be found it must return an appropriate error

            4) Update invoice by invoice id
                    Client can send the same format as the create
                    Cannot update the Id
                    Otherwise same validation rules as create
                                           

            ********************************************/

        [TestMethod]
        public void GetById()
        {
            var invoiceStore = MockRepository.GenerateMock<IInvoiceStore>();

            invoiceStore.Stub(istore => istore.FindInvoiceById(1)).Return(new Invoice()
            {
                Id = 1,
                InvoiceNumber = "INV-0001",
                LineItems = new List<Invoice.LineItem>
                {
                    new Invoice.LineItem
                    {
                        Description = "Pizza",
                        Count = 1,
                        PriceEach = 12.99f,
                        LineTotal = 12.99f
                    }
                }
            });

            InvoiceController ic = new InvoiceController(invoiceStore);
            Invoice i = ic.Get(1);
        }
    }
}
